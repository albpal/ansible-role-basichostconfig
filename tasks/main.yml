---
# tasks file for ansible-role-basichostconfig
- name: Ensure all packages are installed
  yum: 
     name: '{{ item }}'
     state: present
  become: True
  with_items:
  - '{{ packages_to_install }}'
- name: Ensure we have last version of every package
  yum:
    name: "*"
    state: latest
  become: True 
- name: Ensure the timezone is Europe-Madrid
  file:
     src: /usr/share/zoneinfo/Europe/Madrid
     dest: /etc/localtime
     state: link
  become: True
- name: Setup alternate SSH port
  lineinfile:
     dest: "/etc/ssh/sshd_config"
     regexp: "^Port"
     line: "Port {{ssh_port}}"
  become: True
  notify: "Restart sshd"
- name: Set SELinux to Permissive
  selinux:
     state: permissive
     policy: targeted
  become: True
- name: Ensure group '{{admin_group}}' exists
  group:
    name: "{{admin_group}}"
    state: present
- name: Add user '{{ssh_user}}' with group '{{admin_group}}'
  user:
    name: "{{ssh_user}}"
    group: "{{admin_group}}"
    groups: "wheel"
- name: Creates ssh directory
  file:
    path: "/home/{{ssh_user}}/.ssh/"
    state: directory
- name: Adding ssh key to authorized hosts
  copy:
     src: authorized_keys
     dest: "/home/{{ssh_user}}/.ssh/authorized_keys"
     owner: "{{ssh_user}}"
     group: "{{admin_group}}"
     mode: 0600
- name: Allow '{{ admin_group }}' group to have non password sudo
    lineinfile:
       dest: /etc/sudoers
       state: present
       insertafter: '^%wheel'
       line: '%{{ admin_group }} ALL=(ALL) NOPASSWD:ALL'
- name: Disable ssh login for root user
  lineinfile:
     dest: "/etc/ssh/sshd_config"
     regexp: "^#?PermitRootLogin yes"
     line: "PermitRootLogin no"
     backrefs: yes
  become: True
  notify: "Restart sshd"
- name: Allowing '{{ admin_group }}' group to login through ssh
  lineinfile:
     dest: /etc/ssh/sshd_config
     state: present
     insertafter: EOF
     line: 'AllowGroups {{ admin_group }}'
  become: True
  notify: "Restart sshd"
- name: Ensure all services are running and enabled
  service:
    name: '{{ item }}'
    state: started
    enabled: True
  become: True
  with_items:
  - '{{ services_to_be_running_and_enabled }}'
- name: Ensure SSH can pass the firewall
  firewalld:
     port: "{{ ssh_port }}/tcp"
     state: enabled
     permanent: True
     immediate: True
  become: True
